2023-11-13 패스트 캠퍼스 
            한번에 끝내는 Java/Spring 웹 개발 마스터 초격차 패키지 Online
                    Part 4-1 안정적인 서비스를 위한 스프링 DATA와 Security - JPA 프로그래밍
                        ch.09 커스텀 쿼리 사용하기
                            2.Native쿼리 사용하기

                            JPQL로 활용하기 어려운 쿼리가 존재하는 경우 네이티브 쿼리를 통해 SQL문법을 사용하여 데이터베이스와 상호작용을 할 수 있음

                            JPQL과 다르게 entity 속성을 사용하지 못하며 table명을 써야한다

                            DB종류가 변경되었을 때 코드변경없이 쿼리를 자동으로 바꿔주는 JPA 장점에서 떨어진 기능

                            JAVA에서 설정한 부분들을 무시하고 진행된 예) @Where

                            <사용예>

                            @Query(
                                value = "SELECT id, name, age FROM employee WHERE age > :age",
                                nativeQuery = true,
                                resultSetMapping = "employeeResult"
                            )

                            List<Employee> findEmployeesByAgeGreaterThan(int age);

                            네이티브 쿼리를 쓰는 이유

                            1.성능에 대한 문제 해결 - delete의 경우 모든 레코드를 조회하지 않아도 제거할 수 있는 deleteAllInBatch가 있으나 update의 경우는 하나하나 조회하여 id값을 가져와서 처리하며 updateAllInBatch같은 기능이 없음 ⇒ 대량의 DB의 경우 속도저하, 성능 이슈가 생김

                            2.JPA에서 기본적으로 지원하지 않는 기능들을 사용할 때

                                @Query(value = "show tables", nativeQuery = true)
                                List<String> showTables();

                            value의 있는 문자열이 그대로 실행되기 때문에 특수한 형태의 쿼리들도 실행가능                              
            Udemy
               JavaScript 완벽 가이드 : 초급 + 고급 마스터 과정
                    73.모듈소개
                        제어구조 : 특정조건이 충족될 떄 사용하거나 반복적인 작업을 위해 사용하는 구조
                        if statements, Boolean Values & Operators, Loops in JavaScript, Error Handling